#+TITLE: Lógica en Haskell

En este proyecto se encuentra una representación de la lógica proposicional en
Haskell. También contiene una implementación del algoritmo de unificación y un
pequeño intérprete de Prolog.

La presentación se hace como una sucesión de ejercicios resueltos basada en los
[[https://www.cs.us.es/~jalonso/cursos/li-11/temas/temas-LI-2011-12.pdf][Temas de "Lógica informática"]] y en el libro
[[https://www.cs.us.es/~jalonso/publicaciones/2002-ded-automatica-1.pdf][Deducción automática (Vol. 1: Construcción lógica de sistemas lógicos)]]
en el que se usa Prolog en lugar de Haskell.

+ [[./src/SintaxisSemantica.hs][Sintaxis y semántica de la lógica proposicional]].
+ [[./src/FormasNormales.hs][Formas normales y cláusulas]].
+ [[./src/Clausulas.hs][Cláusulas]].
+ [[./src/TablerosSemanticos.hs][Tableros semánticos proposicionales]].
+ [[./src/Secuentes.hs][Cálculo de secuentes proposicionales]].
# + [[./src/DavisPutnam.hs][El procedimiento de Davis y Putnam]].
# + [[./src/ResolucionProposicional.hs][Resolución proposicional]].
# + [[./src/RefinamientosResolucion.hs][Refinamientos de resolución.]]
# + [[./src/ProgramacionLogicaProposicional.hs][Programación lógica proposicional.]]
# + [[./src/Unificacion.hs][Unificación de términos de primer orden.]]
# + [[./src/Prolog.hs][Implementación de Prolog]].
